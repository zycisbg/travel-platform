<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyc.travel.model.mapper.JTravelLineMapper">
  <resultMap id="BaseResultMap" type="com.zyc.travel.model.dto.JTravelLine">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="travel_id" jdbcType="INTEGER" property="travelId" />
    <result column="travel_tel" jdbcType="VARCHAR" property="travelTel" />
    <result column="travel_name" jdbcType="VARCHAR" property="travelName" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="business_price" jdbcType="DECIMAL" property="businessPrice" />
    <result column="agency_price" jdbcType="DECIMAL" property="agencyPrice" />
    <result column="travel_day_count" jdbcType="INTEGER" property="travelDayCount" />
    <result column="transportation" jdbcType="VARCHAR" property="transportation" />
    <result column="go_date" jdbcType="TIMESTAMP" property="goDate" />
    <result column="surplus_count" jdbcType="INTEGER" property="surplusCount" />
    <result column="advance_day_count" jdbcType="INTEGER" property="advanceDayCount" />
    <result column="look_count" jdbcType="INTEGER" property="lookCount" />
    <result column="line_area" jdbcType="VARCHAR" property="lineArea" />
    <result column="line_tips" jdbcType="INTEGER" property="lineTips" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, travel_id, travel_tel, travel_name, title, business_price, agency_price, travel_day_count, 
    transportation, go_date, surplus_count, advance_day_count, look_count, line_area, 
    line_tips, status, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="com.zyc.travel.model.dto.JTravelLineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from j_travel_line
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null">
      limit #{page.begin} , #{page.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from j_travel_line
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from j_travel_line
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyc.travel.model.dto.JTravelLineExample">
    delete from j_travel_line
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyc.travel.model.dto.JTravelLine">
    insert into j_travel_line (id, travel_id, travel_tel, 
      travel_name, title, business_price, 
      agency_price, travel_day_count, transportation, 
      go_date, surplus_count, advance_day_count, 
      look_count, line_area, line_tips, 
      status, create_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{travelId,jdbcType=INTEGER}, #{travelTel,jdbcType=VARCHAR}, 
      #{travelName,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{businessPrice,jdbcType=DECIMAL}, 
      #{agencyPrice,jdbcType=DECIMAL}, #{travelDayCount,jdbcType=INTEGER}, #{transportation,jdbcType=VARCHAR}, 
      #{goDate,jdbcType=TIMESTAMP}, #{surplusCount,jdbcType=INTEGER}, #{advanceDayCount,jdbcType=INTEGER}, 
      #{lookCount,jdbcType=INTEGER}, #{lineArea,jdbcType=VARCHAR}, #{lineTips,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zyc.travel.model.dto.JTravelLine">
    insert into j_travel_line
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="travelId != null">
        travel_id,
      </if>
      <if test="travelTel != null">
        travel_tel,
      </if>
      <if test="travelName != null">
        travel_name,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="businessPrice != null">
        business_price,
      </if>
      <if test="agencyPrice != null">
        agency_price,
      </if>
      <if test="travelDayCount != null">
        travel_day_count,
      </if>
      <if test="transportation != null">
        transportation,
      </if>
      <if test="goDate != null">
        go_date,
      </if>
      <if test="surplusCount != null">
        surplus_count,
      </if>
      <if test="advanceDayCount != null">
        advance_day_count,
      </if>
      <if test="lookCount != null">
        look_count,
      </if>
      <if test="lineArea != null">
        line_area,
      </if>
      <if test="lineTips != null">
        line_tips,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="travelId != null">
        #{travelId,jdbcType=INTEGER},
      </if>
      <if test="travelTel != null">
        #{travelTel,jdbcType=VARCHAR},
      </if>
      <if test="travelName != null">
        #{travelName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="businessPrice != null">
        #{businessPrice,jdbcType=DECIMAL},
      </if>
      <if test="agencyPrice != null">
        #{agencyPrice,jdbcType=DECIMAL},
      </if>
      <if test="travelDayCount != null">
        #{travelDayCount,jdbcType=INTEGER},
      </if>
      <if test="transportation != null">
        #{transportation,jdbcType=VARCHAR},
      </if>
      <if test="goDate != null">
        #{goDate,jdbcType=TIMESTAMP},
      </if>
      <if test="surplusCount != null">
        #{surplusCount,jdbcType=INTEGER},
      </if>
      <if test="advanceDayCount != null">
        #{advanceDayCount,jdbcType=INTEGER},
      </if>
      <if test="lookCount != null">
        #{lookCount,jdbcType=INTEGER},
      </if>
      <if test="lineArea != null">
        #{lineArea,jdbcType=VARCHAR},
      </if>
      <if test="lineTips != null">
        #{lineTips,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyc.travel.model.dto.JTravelLineExample" resultType="java.lang.Integer">
    select count(*) from j_travel_line
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update j_travel_line
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.travelId != null">
        travel_id = #{record.travelId,jdbcType=INTEGER},
      </if>
      <if test="record.travelTel != null">
        travel_tel = #{record.travelTel,jdbcType=VARCHAR},
      </if>
      <if test="record.travelName != null">
        travel_name = #{record.travelName,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.businessPrice != null">
        business_price = #{record.businessPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.agencyPrice != null">
        agency_price = #{record.agencyPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.travelDayCount != null">
        travel_day_count = #{record.travelDayCount,jdbcType=INTEGER},
      </if>
      <if test="record.transportation != null">
        transportation = #{record.transportation,jdbcType=VARCHAR},
      </if>
      <if test="record.goDate != null">
        go_date = #{record.goDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.surplusCount != null">
        surplus_count = #{record.surplusCount,jdbcType=INTEGER},
      </if>
      <if test="record.advanceDayCount != null">
        advance_day_count = #{record.advanceDayCount,jdbcType=INTEGER},
      </if>
      <if test="record.lookCount != null">
        look_count = #{record.lookCount,jdbcType=INTEGER},
      </if>
      <if test="record.lineArea != null">
        line_area = #{record.lineArea,jdbcType=VARCHAR},
      </if>
      <if test="record.lineTips != null">
        line_tips = #{record.lineTips,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update j_travel_line
    set id = #{record.id,jdbcType=INTEGER},
      travel_id = #{record.travelId,jdbcType=INTEGER},
      travel_tel = #{record.travelTel,jdbcType=VARCHAR},
      travel_name = #{record.travelName,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      business_price = #{record.businessPrice,jdbcType=DECIMAL},
      agency_price = #{record.agencyPrice,jdbcType=DECIMAL},
      travel_day_count = #{record.travelDayCount,jdbcType=INTEGER},
      transportation = #{record.transportation,jdbcType=VARCHAR},
      go_date = #{record.goDate,jdbcType=TIMESTAMP},
      surplus_count = #{record.surplusCount,jdbcType=INTEGER},
      advance_day_count = #{record.advanceDayCount,jdbcType=INTEGER},
      look_count = #{record.lookCount,jdbcType=INTEGER},
      line_area = #{record.lineArea,jdbcType=VARCHAR},
      line_tips = #{record.lineTips,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyc.travel.model.dto.JTravelLine">
    update j_travel_line
    <set>
      <if test="travelId != null">
        travel_id = #{travelId,jdbcType=INTEGER},
      </if>
      <if test="travelTel != null">
        travel_tel = #{travelTel,jdbcType=VARCHAR},
      </if>
      <if test="travelName != null">
        travel_name = #{travelName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="businessPrice != null">
        business_price = #{businessPrice,jdbcType=DECIMAL},
      </if>
      <if test="agencyPrice != null">
        agency_price = #{agencyPrice,jdbcType=DECIMAL},
      </if>
      <if test="travelDayCount != null">
        travel_day_count = #{travelDayCount,jdbcType=INTEGER},
      </if>
      <if test="transportation != null">
        transportation = #{transportation,jdbcType=VARCHAR},
      </if>
      <if test="goDate != null">
        go_date = #{goDate,jdbcType=TIMESTAMP},
      </if>
      <if test="surplusCount != null">
        surplus_count = #{surplusCount,jdbcType=INTEGER},
      </if>
      <if test="advanceDayCount != null">
        advance_day_count = #{advanceDayCount,jdbcType=INTEGER},
      </if>
      <if test="lookCount != null">
        look_count = #{lookCount,jdbcType=INTEGER},
      </if>
      <if test="lineArea != null">
        line_area = #{lineArea,jdbcType=VARCHAR},
      </if>
      <if test="lineTips != null">
        line_tips = #{lineTips,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyc.travel.model.dto.JTravelLine">
    update j_travel_line
    set travel_id = #{travelId,jdbcType=INTEGER},
      travel_tel = #{travelTel,jdbcType=VARCHAR},
      travel_name = #{travelName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      business_price = #{businessPrice,jdbcType=DECIMAL},
      agency_price = #{agencyPrice,jdbcType=DECIMAL},
      travel_day_count = #{travelDayCount,jdbcType=INTEGER},
      transportation = #{transportation,jdbcType=VARCHAR},
      go_date = #{goDate,jdbcType=TIMESTAMP},
      surplus_count = #{surplusCount,jdbcType=INTEGER},
      advance_day_count = #{advanceDayCount,jdbcType=INTEGER},
      look_count = #{lookCount,jdbcType=INTEGER},
      line_area = #{lineArea,jdbcType=VARCHAR},
      line_tips = #{lineTips,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <sql id="Base_Column_List_Union" >

    jtl.id, jtl.travel_id, jtl.travel_tel, jtl.travel_name, jtl.title, jtl.business_price, jtl.agency_price,
    jtl.travel_day_count,jtl.transportation, jtl.go_date, jtl.surplus_count, jtl.advance_day_count,
    jtl.look_count, jtl.line_area,jtl.line_tips, jtl.status, jtl.create_date, jtl.update_date
  </sql>
  <resultMap id="BaseResultMapUnion" type="com.zyc.travel.model.dto.JTravelLine" >

    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="travel_id" property="travelId" jdbcType="INTEGER" />
    <result column="travel_tel" property="travelTel" jdbcType="VARCHAR" />
    <result column="travel_name" property="travelName" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="business_price" property="businessPrice" jdbcType="DECIMAL" />
    <result column="agency_price" property="agencyPrice" jdbcType="DECIMAL" />
    <result column="travel_day_count" property="travelDayCount" jdbcType="INTEGER" />
    <result column="transportation" property="transportation" jdbcType="VARCHAR" />
    <result column="go_date" property="goDate" jdbcType="TIMESTAMP" />
    <result column="surplus_count" property="surplusCount" jdbcType="INTEGER" />
    <result column="advance_day_count" property="advanceDayCount" jdbcType="INTEGER" />
    <result column="look_count" property="lookCount" jdbcType="INTEGER" />
    <result column="line_area" property="lineArea" jdbcType="VARCHAR" />
    <result column="line_tips" property="lineTips" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <association property="jTravelLineExt"
                 resultMap="com.zyc.travel.model.mapper.JTravelLineExtMapper.ResultMapWithBLOBsUnion"/>
    <collection property="jTravelLineDetailList" javaType="ArrayList"
                ofType="com.zyc.travel.model.dto.JTravelLineDetail"
                resultMap="com.zyc.travel.model.mapper.JTravelLineDetailMapper.ResultMapWithBLOBsUnion" />
  </resultMap>
  <select id="getById" resultMap="BaseResultMapUnion" parameterType="java.lang.Integer" >

    select 'true' as QUERYID,
    <include refid="Base_Column_List_Union" />,
    <include refid="com.zyc.travel.model.mapper.JTravelLineExtMapper.Blob_Column_List_Union" />,
    <include refid="com.zyc.travel.model.mapper.JTravelLineDetailMapper.Blob_Column_List_Union" />
    from j_travel_line jtl
    left outer join j_travel_line_detail jtld
    on jtl.id = jtld.line_id
    left outer join j_travel_line_ext jtle
    on jtl.id = jtle.id
    where jtl.id = #{id,jdbcType=INTEGER}
  </select>
</mapper>